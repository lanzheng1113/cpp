SplayTreeNode<T,V>* p = root,*parent = root;
	  while(p != 0) {
			 if (k == p->key) {
				 break;
			 }else if(k < p->key) {
				  parent = p;
				  p = p->left;
			 }else {
				 parent = p;
				 p = p->right;
			 }
	  }
	  //如果找到则删除它，并返回true
	  if(p != 0) {
          if(p == root) {
        	  deleteByCopying(root);
        	  if(root != 0) root->parent = 0;
          }else if(k == parent->left->key) { //左边找到，则删除左孩子
        	  deleteByCopying(parent->left);
        	 if(parent->left != 0 ) parent->left->parent = parent;
          }else {   // 右边找到，则删除右孩子
        	  deleteByCopying(parent->right);
        	  if(parent->right != 0) parent->right->parent = parent;
          }
          return true;
	  }
	  return false;
