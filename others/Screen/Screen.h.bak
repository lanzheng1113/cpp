#ifndef _SCREEN_H_
#define _SCREEN_H_

#include <string>

class Window_Mgr;

class Screen {
//friend class or method
    friend class Window_Mgr;
public:
	//使用类型别名简化类型定义,同时隐藏实现细节
	typedef std::string::size_type index;
	Screen(index ht = 0, index wd = 0): 
                  contents(ht * wd, ' '), cursor(0), 
                  height(ht), width(wd) { }
	//重载的成员函数,从窗口返回一个特定字符
	char get() const { return contents[cursor];}//隐式定义的内联函数
	inline char get(index ht,index wd) const;//显式定义的内联函数
	Screen& move(index r,index c);
	Screen& set(char);
	Screen& set(index,index,char);
	index get_cursor() const;
	//通过是否为const成员函数实现重载
	Screen& display(std::ostream &os)
		{do_display(os);return *this;}
    const Screen& display(std::ostream &os) const
		{do_display(os);return *this;}
private:
	void do_display(std::ostream &os) const
		{os<<contents;}
private:
	std::string	contents;
	index	cursor;
	index	height,width;
};
//可以在类定义体外指定为inline
//返回类型index必须使用完全限定名
inline Screen::index Screen::get_cursor() const
{
	return cursor;
}
#endif
